apply plugin: 'java'
apply plugin:'application'

project.ext.group = 'carlfx'
project.version = 0.1
project.ext.jdkVersion = 1.7
project.ext.antJavafxJar = 'build/classes/ant-javafx'
project.ext.jfxgenProj = project(':jfxgenproj')
project.ext.javafxHome = System.getenv('JAVAFX_HOME')

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

configurations {

}

repositories {
  mavenCentral()
  flatDir {
    dirs "${project.ext.javafxHome}/tools/"
  }

}


dependencies {
  compile project(':jfxgenproj')
  compile files("${project.ext.javafxHome}/rt/lib/jfxrt.jar") 
  testCompile 'junit:junit:4.10'
}


project.ext.mainClass = "carlfx.demos.atomsmasher.GameLoopPart2"

task fxjar(dependsOn:[':jfxgenproj:jar', 'classes']) << {
    def fx = 'javafx:com.sun.javafx.tools.ant'
    ant.sequential{
        taskdef(resource:'com/sun/javafx/tools/ant/antlib.xml',
                uri:fx, classpath: "${project.ext.javafxHome}/tools/ant-javafx.jar")

        "$fx:application"(id:'app-info', name:project.name, mainClass:project.ext.mainClass)

	ext.requiredLibs = configurations.runtime.findAll { File file -> (!file.name.equals('jfxrt.jar')) }
        copy {
          into "build/libs"
	  from ext.requiredLibs 
	}

	// So important that the resources fileset jar file must exist in the directory. (jfxgenproj-0.1.jar)
        "$fx:jar"(destfile:"build/libs/${project.name}-${project.version}.jar"){
            application(refid:'app-info')
            fileset(dir:'build/classes/main')
            resources (id:'xyz', description:'runtime classpath'){
	      requiredLibs.each { File file -> 
	        fileset(dir:'build/libs', includes: file.name) 
	      }
	    }
	}
    }
}
defaultTasks 'clean', 'fxjar'
